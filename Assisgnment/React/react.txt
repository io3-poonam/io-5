1.componenet are two type
 normal function and const home =()=>{}
 and classComponent (use for  class or render )
explain=> class trips expexnds Component {
render(){}
}.
2.function components :Hooks Based 
Hooks : alternate option of lifecycle
lifeCycle : Life of component
Component lifeCycle:Mount(means- disable the current page and open new page) Update(change the everything) Unmount(run in the code but on the time disable)
3. whatever is going to be used with prefix _use_
useState, useEffect, uselayOutEffect. useMeno.etc
4. class component      | function component
  componentWillMount    |
  componentDidMount     | useEffect
  componentShouldUpdate |
  componentWillUnMount  |
5. hooks started with react 16(word only over 16 version)
6.initially function component were only presentation component or stateless component
after introduction of hooks it becomes stateful component
____what is state?just like js we used to write variable using var let const same as we use state inside component to update and 
rerender component
we use usestate() hooks
hooks function (pair)
class lifeCycle (pair)
7. any thing pass parent to child called (props)
8. any things pass child to parent called (calll back function)
9. useEffect
to provide some side effect
it is equivalent to 4 lifecycle of class component
 when to use
when we want to mount any component , update component, unmoiunt component, to fetch API , rerender Component 
10. useEffect(()=>{//logic },[dependencies])
11.empty square braces runs useEffect only once
12. empty square braces runs useEffect[props/state] return useEffect (rerender component)
13. return statement unmount component)

14. Api use in Js for fetch name
15. React API use in axios

